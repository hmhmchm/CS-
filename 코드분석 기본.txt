왜 소스 코드 분석을 해야하는가?

1. 소스 코드 분석 없이 바로 작업은 가능하지만 소스 코드 이해가 필요하고 코드가 얼기 설기 묶여있는 작업은 결국 소스 코드 분석이 필요로 하다.
2. 소스 코드 분석 없이 바로 작업을 하려면 리팩토링을 하면서 소스 코드를 이해하는 방법도 있을 수 있겠다.
3. 결국엔 소스 코드 분석 기간을 일정 산정에 추가하는 것이 필요로 하다.

소스 코드 분석의 단점

1. 우선 자신이 짜지 않은 소스코드를 이해한다는 것은 경력자들도 매우 어려워 한다.
2. 코드를 읽기만 하면 매우 지루
3. 잘못 하면 소스 코드 분석하는 기간을 헛되이 보낼 수 있다.
4. 소스 코드 파일량이 방대한 경우가 대부분이기 때문에 주어진 기간 동안 모든 파일을 다 볼 수는 없다.

소스코드 분석 방법 제안

1. 인수인계 관련 문서가 있다면 충분히 숙지를 한다.
2. 최초 진입 Scene 을 찾는다.
3. Unity Editor 에서 게임이 문제 없이 돌아가는 것을 확인한다.
4. visual studio 기능으로 class diagram 전체적으로 살펴본다.
5. 중요하다고 생각되는 클래스들을 추려서 간략하게 UML로 직접 그려본다.
6. Visual Studio Class Diagram 에서 자신이 개발할 클래스 더블클릭해서 코드 열어보기.
7. Awake() 부터 호출되는 순서로 살펴본다.
8. 팀 내 코딩 스타일이나 코드 포맷팅에 대한 문서 템플릿이 있다면 자신의 것에도 적용시킨다.
9. 주석이 필요한 부분에이나 이해가 된 클래스에다가 주석을 추가. ( 개선할 부분도 추가)
10. 이 과정을 반복한다. 바로 투입 되어도 지장이 없을정도로 지장 있으면 안됨.
